# # Global context (optional, can be omitted if not needed)
# user nginx;
# worker_processes 1;
#
# # HTTP context
# http {
#     include       mime.types;
#     default_type  application/octet-stream;
#
#     # Log settings (optional)
#     access_log  /var/log/nginx/access.log;
#     error_log   /var/log/nginx/error.log;
#
#     # Server block
#
# }

server {
        listen       80;
        server_name  localhost;

        # Root directory
        location / {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

    # Ensure that .js files are served with the correct MIME type
        location ~* ^/admin-one-vue-tailwind/asset/.*\.js$ {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
        }

        # API proxy (example)
        location /api/ {
            rewrite ^/api(/.*)$ $1 break; 
            proxy_pass http://backend:8080;  # Adjust the API service name and port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                return 204;
            }
        }

        location /actuator/ {
            proxy_pass http://gateway:8888;  # Adjust the API service name and port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                return 204;
            }
        }
        location /routes/ {
            rewrite ^/routes(/.*)$ $1 break;
            proxy_pass http://gateway:8888;  # Adjust the API service name and port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                return 204;
            }
        }
    }
